searchState.loadedDescShard("op_alloy_rpc_types_engine", 0, "op-alloy-rpc-types-engine\nThe snappy encoding is broken.\nThe SSZ encoding is broken.\nThe payload envelope is of invalid length.\nAn invalid length was encountered.\nThe signature is invalid.\nOptimism Payload Attributes with parent block reference.\nThis structure maps for the return value of …\nThis structure maps for the return value of …\nOptimism execution payload envelope in network format.\nOptimism Payload Attributes\nErrors that can occur when decoding a payload envelope.\nRepresents the Keccak256 hash of the block\nFormatted Superchain Protocol Version.\nAn error that can occur when encoding or decoding a …\nThe Protocol Version V0 format. Encoded as 31 bytes with …\nSuperchain Signal information.\nFailed to convert slice to array.\nAn unsupported version was encountered.\nVersion-type 0.\nOptimism-specific payload attributes.\nThe payload attributes.\nThe blobs, commitments, and proofs associated with the …\nThe blobs, commitments, and proofs associated with the …\nThe expected value to be received by the feeRecipient in …\nThe expected value to be received by the feeRecipient in …\nDifferentiates forks and custom-builds of standard protocol\nIf set, this sets the EIP-1559 parameters for the block.\nOptimism execution payload envelope in network format and …\nExecution payload V3\nExecution payload V4\nA list of opaque EIP-7685 requests.\nIf set, this sets the exact gas limit the block produced …\nWhether the current batch is the last in its span.\nIncompatible API changes\nIdentifies additional functionality in backwards …\nIf true, the no transactions are taken out of the tx-pool, …\nThe parent block reference.\nThe parent beacon block root.\nEcotone parent beacon block root\nEcotone parent beacon block root\nIdentifies backward-compatible bug-fixes\nThe execution payload.\nThe payload attributes\nThe hash of the payload.\nOptimism execution payload envelope V3.\nOptimism execution payload envelope V3.\nIdentifies unstable versions that may not satisfy the above\nThe recommended Supercain Protocol Version.\nThe minimum Supercain Protocol Version required.\nIntroduced in V3, this represents a suggestion from the …\nIntroduced in V3, this represents a suggestion from the …\nA signature for the payload.\nTransactions is a field for rollups: the transactions list …\nThe expected length.\nThe length that was encountered.\nOptimism Payload Attributes with parent block reference.\nOptimism Payload Attributes\nReturns the payload attributes.\nThe payload attributes.\nIf set, this sets the EIP-1559 parameters for the block.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIf set, this sets the exact gas limit the block produced …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the current batch is the last in its span.\nWhether the current batch is the last in its span.\nCreate a new OpAttributesWithParent instance.\nIf true, the no transactions are taken out of the tx-pool, …\nReturns the parent block reference.\nThe parent block reference.\nThe payload attributes\nTransactions is a field for rollups: the transactions list …\nThe snappy encoding is broken.\nThe SSZ encoding is broken.\nThe payload envelope is of invalid length.\nThe signature is invalid.\nOptimism execution payload envelope in network format.\nErrors that can occur when decoding a payload envelope.\nRepresents the Keccak256 hash of the block\nDecode a payload envelope from a snappy-compressed byte …\nDecode a payload envelope from a snappy-compressed byte …\nDecode a payload envelope from a snappy-compressed byte …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the Keccak256 hash of a sequence of bytes\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe parent beacon block root.\nThe execution payload.\nThe hash of the payload.\nA signature for the payload.\nThe expected message that should be signed by the unsafe …\nThis structure maps for the return value of …\nThe blobs, commitments, and proofs associated with the …\nThe expected value to be received by the feeRecipient in …\nExecution payload V3\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEcotone parent beacon block root\nIntroduced in V3, this represents a suggestion from the …\nThis structure maps for the return value of …\nThe blobs, commitments, and proofs associated with the …\nThe expected value to be received by the feeRecipient in …\nExecution payload V4\nA list of opaque EIP-7685 requests.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEcotone parent beacon block root\nIntroduced in V3, this represents a suggestion from the …\nAn invalid length was encountered.\nFormatted Superchain Protocol Version.\nAn error that can occur when encoding or decoding a …\nThe Protocol Version V0 format. Encoded as 31 bytes with …\nSuperchain Signal information.\nFailed to convert slice to array.\nAn unsupported version was encountered.\nVersion-type 0.\nReturns the inner value of the ProtocolVersion enum if it …\nDifferentiates forks and custom-builds of standard protocol\nDifferentiates forks and custom-builds of standard protocol\nVersion-type 0 byte decoding:\nVersion-type 0 byte encoding:\nReturns a human-readable string representation of the …\nVersion-type 0 byte encoding:\nVersion-type 0 byte encoding:\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the inner value of the ProtocolVersion enum\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the build tag is human-readable, false …\nIncompatible API changes\nIncompatible API changes\nIdentifies additional functionality in backwards …\nIdentifies additional functionality in backwards …\nIdentifies backward-compatible bug-fixes\nIdentifies backward-compatible bug-fixes\nIdentifies unstable versions that may not satisfy the above\nIdentifies unstable versions that may not satisfy the above\nThe recommended Supercain Protocol Version.\nThe minimum Supercain Protocol Version required.\nThe expected length.\nThe length that was encountered.")