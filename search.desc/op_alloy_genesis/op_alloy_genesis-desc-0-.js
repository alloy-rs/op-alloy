searchState.loadedDescShard("op_alloy_genesis", 0, "op-alloy-genesis\nAddress Types\nChain Config Types\nGenesis types.\nModule containing fee parameters.\nRollup Config Types\nSystem Config Type\nThe set of network-specific contracts for a given chain.\nThe address manager\nAnchor State Registry Proxy address\nThe challenger’s address\nDelayed WETH Proxy address\nDispute Game Factory Proxy address\nFault Dispute Game Proxy address\nReturns the argument unchanged.\nThe guardian address\nCalls <code>U::from(self)</code>.\nL1 Cross Domain Messenger proxy address\nL1 ERC721 Bridge proxy address\nL1 Standard Bridge proxy address\nL2 Output Oracle Proxy address\nMIPS Proxy address\nOptimism Mintable ERC20 Factory Proxy address\nOptimism Portal Proxy address\nPermissioned Dispute Game Proxy address\nPreimage Oracle Proxy address\nProxy Admin address\nThe owner of the Proxy Admin\nThe system config owner\nSystem Config Proxy address\nSets zeroed addresses to <code>Option::None</code>.\nAltDA configuration.\nDefines core blockchain settings per block.\nFrontier chains are chains with customizations beyond the …\nHardfork configuration.\nStandard chains don’t have any customizations beyond the …\nLevel of integration with the superchain.\nAddresses\nAlternative DA configuration\nChain-specific batch inbox address\nThe block time in seconds.\nCanyon hardfork activation time\nChain is a simple string to identify the chain, within its …\nChain ID\nAltDA challenge address\nAltDA challenge window time (in seconds)\nAltDA resolution window time (in seconds)\nData availability type.\nDelta hardfork activation time\nEcotone hardfork activation time\nChain explorer HTTP endpoint\nFjord hardfork activation time\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGas paying token metadata. Not consumed by downstream …\nChain-specific genesis information\nGranite hardfork activation time\nHardfork Configuration. These values may override the …\nHolocene hardfork activation time\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nL1 chain ID\nLoads the rollup config for the OP-Stack chain given the …\nThe maximum sequencer drift in seconds.\nChain name (e.g. “Base”)\nOptimism configuration\nChain public RPC endpoint\nThe sequencer window size in seconds.\nChain sequencer RPC endpoint\nSet missing hardfork configurations to the defaults, if …\nToggles standard chain validation checks on for this …\nSuperchain is a simple string to identify the superchain. …\nLevel of integration with the superchain.\nTime of when a given chain is opted in to the Superchain. …\nChain genesis information.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nL1 genesis block\nL2 genesis block\nTimestamp of the L2 genesis block\nOptional System configuration\nGet the base fee parameters for Base Sepolia.\nBase fee max change denominator for Base Sepolia as …\nGet the base fee parameters for Optimism Mainnet.\nBase fee max change denominator for Optimism Mainnet as …\nBase fee max change denominator for Optimism Mainnet as …\nBase fee max change denominator for Optimism Mainnet as …\nGet the base fee parameters for Optimism Sepolia.\nBase fee max change denominator for Optimism Sepolia as …\nBase fee max change denominator for Optimism Sepolia as …\nBase fee max change denominator for Optimism Sepolia as …\nOptimism Base Fee Configuration\nReturns the inner BaseFeeParams.\nReturns the BaseFeeParams for the canyon hardfork.\nReturns the BaseFeeParams for the given chain id.\nEIP 1559 Denominator\nEIP 1559 Denominator for the Canyon hardfork\nEIP 1559 Elasticity Parameter\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe RollupConfig for Base Mainnet.\nThe RollupConfig for Base Sepolia.\nThe max sequencer drift when the Fjord hardfork is active.\nThe channel timeout once the Granite hardfork is active.\nThe max rlp bytes per channel for the Bedrock hardfork.\nThe max rlp bytes per channel for the Fjord hardfork.\nThe RollupConfig for OP Mainnet.\nThe RollupConfig for OP Sepolia.\nThe Rollup configuration.\nBase Fee Params\n<code>batch_inbox_address</code> is the L1 address that batches are …\n<code>blobs_enabled_l1_timestamp</code> is the timestamp to start …\nThe block time of the L2, in seconds.\nBase fee params post-canyon hardfork\n<code>canyon_time</code> sets the activation time of the Canyon network …\nReturns the channel timeout for the given timestamp.\nNumber of L1 blocks between when a channel can be opened …\nChecks the scalar value in Ecotone.\n<code>da_challenge_address</code> is the L1 address that the data …\n<code>delta_time</code> sets the activation time of the Delta network …\n<code>deposit_contract_address</code> is the L1 address that deposits …\n<code>ecotone_time</code> sets the activation time of the Ecotone …\n<code>fjord_time</code> sets the activation time of the Fjord network …\nReturns the argument unchanged.\nReturns the RollupConfig for the given L2 chain ID.\nThe genesis state of the rollup.\nThe channel timeout after the Granite hardfork.\n<code>granite_time</code> sets the activation time for the Granite …\n<code>holocene_time</code> sets the activation time for the Holocene …\nCalls <code>U::from(self)</code>.\nReturns true if a DA Challenge proxy Address is provided …\nReturns true if Canyon is active at the given timestamp.\nReturns true if Delta is active at the given timestamp.\nReturns true if Ecotone is active at the given timestamp.\nReturns true if Fjord is active at the given timestamp.\nReturns true if Granite is active at the given timestamp.\nReturns true if Holocene is active at the given timestamp.\nReturns true if Regolith is active at the given timestamp.\nThe L1 chain ID\n<code>l1_system_config_address</code> is the L1 address that the system …\nThe L2 chain ID\nReturns the max rlp bytes per channel for the given …\nReturns the max sequencer drift for the given timestamp.\nSequencer batches may not be more than MaxSequencerDrift …\n<code>protocol_versions_address</code> is the L1 address that the …\n<code>regolith_time</code> sets the activation time of the Regolith …\nReturns the rollup config for the given chain ID.\nThe sequencer window size.\nThe superchain config address.\nBatcher update type\nA batcher update error.\nFailed to decode the batcher address argument from the …\nAn error for updating the batcher address on the …\nThe initial version of the system config event log.\n<code>keccak256(&quot;ConfigUpdate(uint256,uint8,bytes)&quot;)</code>\nFailed to decode the eip1559 params argument from the eip …\nAn error for updating the EIP-1559 parameters on the …\nEIP-1559 parameters update type\nAn EIP-1559 parameter update error.\nGas config update type\nA gas config update error.\nAn error for updating the gas config on the SystemConfig.\nGas limit update type\nA gas limit update error.\nFailed to decode the gas limit argument from the gas limit …\nAn error for updating the gas limit on the SystemConfig.\nInvalid data length.\nInvalid data length.\nInvalid data length.\nInvalid data length.\nThe data length is invalid.\nThe data length is invalid.\nThe data length is invalid.\nThe data length is invalid.\nThe data pointer is invalid.\nThe data pointer is invalid.\nThe data pointer is invalid.\nThe data pointer is invalid.\nAn invalid system config update type.\nThe log topic is invalid.\nReceived an incorrect number of log topics.\nFailed to decode the data length argument from the batcher …\nFailed to decode the data length argument from the gas …\nFailed to decode the data length argument from the gas …\nFailed to decode the data length argument from the eip …\nAn error occurred while processing the update log.\nAn error occurred while processing the update log.\nFailed to decode the overhead argument from the gas config …\nFailed to decode the data pointer argument from the …\nFailed to decode the data pointer argument from the gas …\nFailed to decode the data pointer argument from the gas …\nFailed to decode the data pointer argument from the eip …\nFailed to decode the scalar argument from the gas config …\nSystem accounts\nSystem configuration.\nAn error for processing the SystemConfig update log.\nRepresents type of update to the system config.\nUnsafe block signer update type\nThe config update log version is unsupported.\nFailed to decode the update type from the config update …\nThe address that can deposit attributes\nThe address of the attributes predeploy\nBase fee scalar value\nBatcher address\nBlob base fee scalar value\nEIP-1559 denominator\nEIP-1559 elasticity\nReturns the eip1559 parameters from a SystemConfig encoded …\nThe address of the fee vault\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGas limit value\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFee overhead value\nDecodes an EVM log entry emitted by the system config …\nFee scalar value\nUpdates the batcher address in the SystemConfig given the …\nUpdates the EIP-1559 parameters of the SystemConfig given …\nUpdates the SystemConfig gas config - both the overhead …\nUpdates the gas limit of the SystemConfig given the log …\nFilters all L1 receipts to find config updates and applies …")